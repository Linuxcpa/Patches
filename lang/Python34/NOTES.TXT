This is in progress work for Python 34. This is the third improved release.
Admittedly, the other two had issues but weren't up for very long.
I am going to see if I can get the nis module to behave, but we have an almost complete solution as of now.

As it is now, I have a mostly complete build and better results then Python 3.4.1 than I can achieve with Python 2.7.7 or 2.7.8.

The only item that won't build is the NIS module. I don't expect that it will unless rpc headers are available.
I don't think they are available for Haiku yet, as of 11/15/2014.

To use this Pkgsrc package, you have two choices:

OPTION 1: DELETE EXISTING PYTHON34 DIRECTORY AND REPLACE WITH ZIPFILE IN "Whole Makeset" FOLDER

OPTION 2: FOLLOW THE INSTRUCTIONS BELOW:

1. Place the 3 replacement patches in ..pkgsrc/lang/python34/patches, replacing the 3 patches of the same name.
2. Place the remaining 111 patches in the localpatches directory, or in the same patches folder mentioned above.
3. Replace pkgsrc's Makefile and PLIST with the ones in the replacement files folder.
4. Open terminal, cd /boot/home/pkgsrc/pkgsrc/lang/python34, bmake makepatchsum
5. bmake install
6. Party like its 1899.

Most of the 114 patches end up placing headers where the source can find it.
The remaining patches are mostly standard.
This is because of some pathing issue in Haiku. 

We are almost there, if not. :)

A few notes:

1. Patch patch-Lib_cgi.py assumes that pkgsrc is set up as:

/boot/home/pkgsrc/pkgsrc

Specifically, that the python34 package toolset is located at:

/boot/home/pkgsrc/pkgsrc/lang/python34.

If you have a different setup, edit patch-Lib_cgi.py accordingly.

2. The settings supplied (overall pkgsrc settings) are integral to this solution.
Note, that if you have used pkgsrc before, settings you would normally find in 
MK.conf are now included in a large collection of text files, located in 
/boot/home/pkg/etc/pkgsrc. Specifically, Python 3.4.1 settings are in:

I. package/CONFIGURE_ARGS_ENV.mk

.if ${PKGPATH} == "lang/python34"
CONFIGURE_ARGS+= --disable-ipv6
CONFIGURE_ARGS+=    PKG_CONFIG_PATH=/boot/home/pkg/lib/pkgconfig
CONFIGURE_ARGS+=    --enable-shared
CONFIGURE_ARGS+=    --prefix=/boot/home/pkg
CONFIGURE_ARGS+=    --includedir=/boot/home/pkg/include
.endif

II. package/Libs.mk

.if ${PKGPATH} == "lang/python34"
LIBS.Haiku+=	-lnetwork
.endif

III. package/SUBST_CLASSES.mk

.if ${PKGPATH} == "lang/python34"
LDFLAGS+= -L/boot/system/lib
SUBST_CLASSES+= symlink
SUBST_STAGE.symlink= pre-configure
SUBST_FILES.symlink= Makefile.pre.in
SUBST_SED.symlink= -e 's,LN) -f ,LN) -sf ,g'
.endif

3. Yes I did zero out patch-au on purpose.

I did this because: 
a.) if you forget to delete it, it won't work
b.) I wanted the instructions to be simple.

4. Yes I know the headers in Incude are being moved

If I don't move them, they won't be found.

5. Can the patches be used in Haikuporter right away?

No, but my hope is that they could be as quickly as possible.
General information:

I. There are a total of 125 patches that you can find in the "Whole Makeset" folder. 
Open up the zip file and retrieve all of the patches from the patches folder.

II.) Pathing in some of my patches may need to be changed.

I ran a grep -r on all of the patches and only the following files 
are geared towards pkgsrc pathing:

My patches:
a.) patch-Lib_cgi.py
b.) patch-Lib_plat-haiku1_regen
c.) patch-Tools_scripts_h2py.py

In the Replacement patches folder:
a.) patch-am

6. Pkgsrc information:

I edited the package's makefile and PLIST to cause libpython3.so to be created and to exclude NIS.so from PLIST.
I had to patch in header files because they weren't being pathed by Haiku.
