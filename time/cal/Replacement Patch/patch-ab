$NetBSD: patch-ab,v 1.5 2005/01/25 03:37:29 tv Exp $

--- cal.c.orig	1996-07-11 19:36:33.057147392 +0000
+++ cal.c
@@ -10,7 +10,7 @@
                     /* automatically if used with USE_COLOR for MSDOS or    */
                     /* OS/2, because USE_COLOR cannot coexist with USE_ANSI.*/
 /*--------------------------------------------------------------------------*/
- 
+
 #ifdef OS2
 #undef MSDOS
 #undef UNIX
@@ -122,6 +122,7 @@ BASIC DATA STRUCTURE:                   
 #include <ctype.h>
 #include <string.h>
 #include <sys/types.h>
+#include <sys/param.h>      /*NetBSD*/
  
 #ifndef max
 #define max(a,b) (((a)>(b))?(a):(b))
@@ -130,12 +131,16 @@ BASIC DATA STRUCTURE:                   
 /* Note: Other unix systems may require this next re-define to work. */
 /* I believe that SCO is one such system.  Please send in any fixes  */
 /* needed to get your system running.                                */
-#ifdef __linux__          /* Make linux compatible with stricmp() */
-#define stricmp(a,b) strcasecmp(a,b) /* case-insensitive string comparison */
+#if (defined(BSD) && BSD >= 199306) || defined (sun) || defined(__sgi) || defined(__INTERIX)
+#define strncasecmp(a,b) strcasecmp(a,b) /* case-insensitive string comparison */
+#endif
+ 
+#ifdef __linux__          /* Make linux compatible with strncasecmp() */
+#define strncasecmp(a,b) strcasecmp(a,b) /* case-insensitive string comparison */
 #endif
  
-#ifdef __ZTC__            /* make Zortech compatible with stricmp() */
-#define stricmp(a,b) strcmpl(a,b) /* case-insensitive string comparison */
+#ifdef __ZTC__            /* make Zortech compatible with strncasecmp() */
+#define strncasecmp(a,b) strcmpl(a,b) /* case-insensitive string comparison */
 #endif /* __ZTC__ */
  
 #ifdef MSDOS
@@ -551,7 +556,7 @@ contsetup:
             for (i = 0; i < 12; i++) {
                 strcpy(str, months[i]);
                 str[3] = argv[1][3] = '\0';
-                if (!stricmp(argv[1], str)) {
+                if (!strncasecmp(argv[1], str)) {
                     m = i + 1;
                     break;
                 }
@@ -1401,8 +1406,8 @@ FILE *efopen(const char *file, const cha
             strcpy(str, ".");
             strcpy(str, file);
             if ((fp = fopen(str, mode)) == NULL) {
-                /* If still not found then look in a lib directory */
-                strcpy(str, "/usr/lib/");
+                /* If still not found then look in config directory */
+                strcpy(str, PKG_SYSCONFDIR "/");
                 strcat(str,file);
                 fp = fopen(str, mode);
             }
